{"ast":null,"code":"var _jsxFileName = \"/Users/nickciambrone/Desktop/fantasy-action/fantasy-action/src/pages/set-lineup/set-lineup.component.jsx\";\nimport React from 'react';\nimport { LineUp } from '../../components/lineup/lineup.component';\nimport './set-lineup.styles.scss';\nimport players from \"../../pages/set-lineup/playerData\";\nimport { CardList } from \"../../components/card-list/card-list.component\";\nimport { SearchBox } from \"../../components/search-box/search-box.component.jsx\";\nimport { Rosters } from '../../components/rosters/rosters.component.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SetLineup extends React.Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      this.setState({\n        searchField: e.target.value\n      });\n    };\n\n    this.addPlayer = (player, position, team) => {\n      if (this.state.team === 'user') {\n        this.setState(prevState => {\n          if (position === 'RB') {\n            let team = Object.assign({}, prevState.userTeam); // creating copy of state variable jasper\n\n            if (Object.keys(team['RB1']).length === 0) {\n              team['RB1']['name'] = player; // update the name property, assign a new value                 \n            } else if (Object.keys(team['RB2']).length === 0) {\n              team['RB2']['name'] = player; // update the name property, assign a new value                 \n            } else {\n              team['Flex']['name'] = player;\n            }\n          } else if (position === 'WR') {\n            let team = Object.assign({}, prevState.userTeam); // creating copy of state variable jasper\n\n            if (Object.keys(team['WR1']).length === 0) {\n              team['WR1']['name'] = player; // update the name property, assign a new value                 \n            } else if (Object.keys(team['RB2']).length === 0) {\n              team['WR2']['name'] = player; // update the name property, assign a new value                 \n            } else {\n              team['Flex']['name'] = player;\n            }\n          } else {\n            let team = Object.assign({}, prevState.userTeam); // creating copy of state variable jasper\n\n            team[position]['name'] = player; // update the name property, assign a new value                 \n\n            return { ...prevState,\n              userTeam: team\n            };\n          }\n\n          ; // return new object jasper object\n        });\n        console.log(this.state);\n      } else if (this.state.team === 'opponent') {\n        this.setState(prevState => {\n          let team = Object.assign({}, prevState.opponentTeam); // creating copy of state variable jasper\n\n          team[position]['name'] = player; // update the name property, assign a new value                 \n\n          return { ...prevState,\n            opponentTeam: team\n          }; // return new object jasper object\n        });\n      }\n    };\n\n    this.handleClick = e => {\n      if (e.target.id == 'my-team' && this.state.team == 'opponent') {\n        this.setState({\n          team: 'user'\n        });\n      }\n\n      if (e.target.id === 'opponent' && this.state.team === 'user') {\n        console.log(this.state.team);\n        this.setState({\n          team: 'opponent'\n        });\n        console.log(this.state.team);\n      }\n    };\n\n    this.state = {\n      players: players,\n      searchField: \"\",\n      team: 'user',\n      userTeam: {\n        QB: {},\n        RB1: {},\n        RB2: {},\n        WR1: {},\n        WR2: {},\n        TE: {},\n        Flex: {},\n        Def: {}\n      },\n      opponentTeam: {\n        QB: {},\n        RB1: {},\n        RB2: {},\n        WR1: {},\n        WR2: {},\n        TE: {},\n        Flex: {},\n        Def: {}\n      }\n    };\n  }\n\n  render() {\n    console.log(this.state.team);\n    const {\n      searchField,\n      players\n    } = this.state;\n    const filteredPlayers = players.filter(player => player.name.toLowerCase().includes(searchField.toLowerCase()));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"set-lineup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-box-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-box\",\n          children: /*#__PURE__*/_jsxDEV(SearchBox, {\n            placeholder: \"Search Player\",\n            handleChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"choose-lineup\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"my-team\",\n            className: `${this.state.team === 'user' ? 'active' : ''} lineup-choice my-team`,\n            onClick: this.handleClick,\n            children: \"My Team\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"opponent\",\n            className: `${this.state.team === 'opponent' ? 'active' : ''} lineup-choice opponent`,\n            onClick: this.handleClick,\n            children: \"Opposing Team\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-box-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"roster\",\n            children: /*#__PURE__*/_jsxDEV(Rosters, {\n              team: this.state.team,\n              userTeam: this.state.userTeam,\n              opponentTeam: this.state.opponentTeam\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-options\",\n            children: /*#__PURE__*/_jsxDEV(CardList, {\n              players: filteredPlayers,\n              addPlayer: this.addPlayer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default SetLineup;","map":{"version":3,"sources":["/Users/nickciambrone/Desktop/fantasy-action/fantasy-action/src/pages/set-lineup/set-lineup.component.jsx"],"names":["React","LineUp","players","CardList","SearchBox","Rosters","SetLineup","Component","constructor","handleChange","e","setState","searchField","target","value","addPlayer","player","position","team","state","prevState","Object","assign","userTeam","keys","length","console","log","opponentTeam","handleClick","id","QB","RB1","RB2","WR1","WR2","TE","Flex","Def","render","filteredPlayers","filter","name","toLowerCase","includes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {LineUp} from '../../components/lineup/lineup.component'\nimport './set-lineup.styles.scss'\nimport players from \"../../pages/set-lineup/playerData\";\nimport { CardList } from \"../../components/card-list/card-list.component\";\nimport { SearchBox } from \"../../components/search-box/search-box.component.jsx\";\nimport {Rosters} from '../../components/rosters/rosters.component.jsx'\nclass SetLineup extends React.Component{\n    constructor() {\n        super();\n        this.state = {\n          players: players,\n          searchField: \"\",\n          team: 'user',\n          userTeam:{QB:{}, RB1:{}, RB2:{}, WR1:{}, WR2:{},  TE:{}, Flex:{}, Def:{}},\n          opponentTeam:{QB:{}, RB1:{}, RB2:{}, WR1:{}, WR2:{}, TE:{}, Flex:{}, Def:{}}\n      }}\n      handleChange = (e) => {\n        this.setState({ searchField: e.target.value });\n      };\n      addPlayer = (player, position, team) =>{\n\n        if (this.state.team === 'user'){\n          \n            this.setState(prevState => {\n\n              if (position ==='RB'){\n                let team = Object.assign({}, prevState.userTeam);  // creating copy of state variable jasper\n                if (Object.keys(team['RB1']).length===0){\n                  team['RB1']['name'] = player;                     // update the name property, assign a new value                 \n\n                }\n                else if (Object.keys(team['RB2']).length===0){\n                  team['RB2']['name'] = player;                     // update the name property, assign a new value                 \n                }\n                else {\n                  team['Flex']['name']=player;\n                }\n              }\n              else if (position ==='WR'){\n                let team = Object.assign({}, prevState.userTeam);  // creating copy of state variable jasper\n                if (Object.keys(team['WR1']).length===0){\n                  team['WR1']['name'] = player;                     // update the name property, assign a new value                 \n\n                }\n                else if (Object.keys(team['RB2']).length===0){\n                  team['WR2']['name'] = player;                     // update the name property, assign a new value                 \n                }\n                else {\n                  team['Flex']['name']=player;\n                }\n              }\n              else {\n              let team = Object.assign({}, prevState.userTeam);  // creating copy of state variable jasper\n              team[position]['name'] = player;                     // update the name property, assign a new value                 \n              return { ...prevState, userTeam:team };};                                 // return new object jasper object\n\n             \n        })\n        console.log(this.state)                          \n\n      }\n        else if (this.state.team === 'opponent'){\n          \n            this.setState(prevState => {\n              let team = Object.assign({}, prevState.opponentTeam);  // creating copy of state variable jasper\n              team[position]['name'] = player;                     // update the name property, assign a new value                 \n              return { ...prevState, opponentTeam:team };                                 // return new object jasper object\n            })\n          \n   \n        }\n      }\n      handleClick = (e) =>{\n        if (e.target.id=='my-team' && this.state.team=='opponent'){\n          this.setState({team:'user'})\n\n        }\n        if (e.target.id==='opponent' && this.state.team==='user'){\n          console.log(this.state.team)\n\n          this.setState({team:'opponent'})\n          console.log(this.state.team)\n\n        }\n      };\n      render() {\n        console.log(this.state.team)\n        const{searchField,players}=this.state;\n        const filteredPlayers=players.filter(player=>player.name.toLowerCase().includes(searchField.toLowerCase()))\n    return (\n        <div className=\"set-lineup\">\n        <div className='flex-box-col'>\n        <div className='search-box'>\n        <SearchBox\n        placeholder=\"Search Player\"\n        handleChange={this.handleChange}\n      />\n      </div>\n      <div className='choose-lineup'>\n       <div id='my-team' className= {`${this.state.team==='user' ? 'active':''} lineup-choice my-team`} onClick={this.handleClick}>My Team</div>\n       <div id='opponent' className = {`${this.state.team==='opponent' ? 'active':''} lineup-choice opponent`} onClick={this.handleClick} >Opposing Team</div>\n      </div>\n      <div className='flex-box-row'>\n\n        <div className='roster'>\n      <Rosters team={this.state.team} userTeam={this.state.userTeam} opponentTeam={this.state.opponentTeam}/>\n        </div>\n       \n        <div className='player-options'>\n        <CardList players={filteredPlayers} addPlayer={this.addPlayer}/>\n        </div>\n        </div>\n        </div>\n      </div>\n\n        \n    )}}\nexport default SetLineup"]},"metadata":{},"sourceType":"module"}