{"ast":null,"code":"import lineupActionTypes from './lineup.types';\nimport players from \"./playerData\";\nimport { changeTeam } from './lineup.utils';\nimport { addPlayer } from './lineup.utils';\nimport { selectFormat } from './lineup.utils';\nconst INITIAL_STATE = {\n  players: players,\n  searchField: \"\",\n  team: \"user\",\n  formatSelected: false,\n  // userTeam: {\n  //   QB: { name: \"\" },\n  //   RB1: { name: \"\" },\n  //   RB2: { name: \"\" },\n  //   WR1: { name: \"\" },\n  //   WR2: { name: \"\" },\n  //   TE: { name: \"\" },\n  //   Flex: { name: \"\" },\n  //   K: { name: \"\" },\n  //   DE: { name: \"\" },\n  // },\n  // opponentTeam: {\n  //   QB: { name: \"\" },\n  //   RB1: { name: \"\" },\n  //   RB2: { name: \"\" },\n  //   WR1: { name: \"\" },\n  //   WR2: { name: \"\" },\n  //   TE: { name: \"\" },\n  //   Flex: { name: \"\" },\n  //   K: { name: \"\" },\n  //   DE: { name: \"\" },\n  // },\n  userTeam: {},\n  opponentTeam: {},\n  teamsFull: 'false',\n  positions: ['All', 'QB', 'RB', 'WR', 'TE', 'K', 'DE'],\n  positionSelected: 'All'\n};\n\nconst lineupReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case lineupActionTypes.CHANGE_POSITION:\n      return { ...state,\n        positionSelected: action.payload\n      };\n\n    case lineupActionTypes.CHANGE_TEAM:\n      return { ...state,\n        team: changeTeam(state.team, action.payload)\n      };\n\n    case lineupActionTypes.ADD_PLAYER:\n      if (state.team === 'user') {\n        return { ...state,\n          userTeam: addPlayer(state.userTeam, state.opponentTeam, action.payload)\n        };\n      }\n\n      if (state.team === 'opponent') {\n        return { ...state,\n          opponentTeam: addPlayer(state.opponentTeam, state.userTeam, action.payload)\n        };\n      }\n\n    case lineupActionTypes.SET_TEAMS_FULL:\n      return { ...state,\n        teamsFull: action.payload\n      };\n\n    case lineupActionTypes.DROP_PLAYER:\n      if (state.team === 'user') {\n        let tempTeam = Object.assign({}, state.userTeam);\n        console.log(action.payload.position);\n        console.log(tempTeam[action.payload.position]);\n        tempTeam[action.payload.position]['name'] = '';\n        tempTeam[action.payload.position]['projectedPoints'] = '';\n        tempTeam[action.payload.position]['position'] = '';\n        tempTeam[action.payload.position]['team'] = '';\n        return { ...state,\n          userTeam: tempTeam\n        };\n      }\n\n      if (state.team === 'opponent') {\n        let tempTeam = Object.assign({}, state.opponentTeam);\n        console.log(action.payload.position);\n        console.log(tempTeam[action.payload.position]);\n        tempTeam[action.payload.position]['name'] = '';\n        return { ...state,\n          opponentTeam: tempTeam\n        };\n      }\n\n    case lineupActionTypes.SELECT_FORMAT:\n      return { ...state,\n        userTeam: selectFormat(action.payload),\n        opponentTeam: selectFormat(action.payload),\n        formatSelected: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default lineupReducer;\n\nfunction newFunction() {\n  return false;\n}","map":{"version":3,"sources":["/Users/nickciambrone/Desktop/fantasy-action/fantasy-action/src/redux/lineup/lineup.reducer.js"],"names":["lineupActionTypes","players","changeTeam","addPlayer","selectFormat","INITIAL_STATE","searchField","team","formatSelected","userTeam","opponentTeam","teamsFull","positions","positionSelected","lineupReducer","state","action","type","CHANGE_POSITION","payload","CHANGE_TEAM","ADD_PLAYER","SET_TEAMS_FULL","DROP_PLAYER","tempTeam","Object","assign","console","log","position","SELECT_FORMAT","newFunction"],"mappings":"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","sourcesContent":["import lineupActionTypes from './lineup.types'\nimport players from \"./playerData\";\nimport {changeTeam} from './lineup.utils'\nimport {addPlayer} from './lineup.utils'\nimport {selectFormat} from './lineup.utils'\n\n\n\nconst INITIAL_STATE={\n    players: players,\n    searchField: \"\",\n    team: \"user\",\n    formatSelected:false,\n    // userTeam: {\n    //   QB: { name: \"\" },\n    //   RB1: { name: \"\" },\n    //   RB2: { name: \"\" },\n    //   WR1: { name: \"\" },\n    //   WR2: { name: \"\" },\n    //   TE: { name: \"\" },\n    //   Flex: { name: \"\" },\n    //   K: { name: \"\" },\n    //   DE: { name: \"\" },\n    // },\n    // opponentTeam: {\n    //   QB: { name: \"\" },\n    //   RB1: { name: \"\" },\n    //   RB2: { name: \"\" },\n    //   WR1: { name: \"\" },\n    //   WR2: { name: \"\" },\n    //   TE: { name: \"\" },\n    //   Flex: { name: \"\" },\n    //   K: { name: \"\" },\n    //   DE: { name: \"\" },\n    // },\n    userTeam:{},\n    opponentTeam:{},\n    teamsFull:'false',\n    positions:['All','QB','RB','WR','TE','K','DE'],\n    positionSelected:'All',\n}\n\nconst lineupReducer = (state=INITIAL_STATE, action)=>{\n    switch(action.type){\n      case lineupActionTypes.CHANGE_POSITION:\n        return {\n          ...state,positionSelected:action.payload\n         \n      }\n      case lineupActionTypes.CHANGE_TEAM:\n        return{\n          ...state, team:changeTeam(state.team, action.payload)\n        }\n      case lineupActionTypes.ADD_PLAYER:\n        if (state.team==='user'){\n          return{\n            ...state, userTeam:addPlayer(state.userTeam, state.opponentTeam, action.payload)\n          }\n        }\n        if (state.team==='opponent'){\n          return{\n            ...state, opponentTeam:addPlayer(state.opponentTeam, state.userTeam, action.payload)\n          }\n        }\n      case lineupActionTypes.SET_TEAMS_FULL:\n        return{\n          ...state,teamsFull:action.payload\n        }\n      case lineupActionTypes.DROP_PLAYER:\n        if (state.team==='user'){\n          let tempTeam = Object.assign({}, state.userTeam)\n          console.log(action.payload.position)\n          console.log(tempTeam[action.payload.position])\n          tempTeam[action.payload.position]['name']=''\n          tempTeam[action.payload.position]['projectedPoints']=''\n          tempTeam[action.payload.position]['position']=''\n          tempTeam[action.payload.position]['team']=''\n\n          return {...state, userTeam:tempTeam}\n        }\n        if (state.team==='opponent'){\n          let tempTeam = Object.assign({}, state.opponentTeam)\n          console.log(action.payload.position)\n          console.log(tempTeam[action.payload.position])\n          tempTeam[action.payload.position]['name']=''\n          return {...state, opponentTeam:tempTeam}\n        }\n      case lineupActionTypes.SELECT_FORMAT:\n        return {...state, userTeam:selectFormat(action.payload), opponentTeam:selectFormat(action.payload),formatSelected:true}\n        default: return state;\n    }\n}\nexport default lineupReducer;\n\nfunction newFunction() {\n  return false;\n}\n"]},"metadata":{},"sourceType":"module"}