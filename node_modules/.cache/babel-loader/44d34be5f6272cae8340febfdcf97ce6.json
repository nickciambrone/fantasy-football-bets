{"ast":null,"code":"var _jsxFileName = \"/Users/nickciambrone/Desktop/fantasy-action/fantasy-action/src/components/card-list/card-list.component.jsx\";\nimport React from \"react\";\nimport \"./card-list.style.scss\";\nimport Card from '../card/card.component';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CardList extends React.Component {\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    let userTeamFull = true;\n\n    for (const prop in this.props.userTeam) {\n      if (this.props.userTeam[prop]['name'] === '') {\n        userTeamFull = false;\n        console.log('test');\n      }\n    }\n\n    let oppTeamFull = true;\n\n    for (const prop in this.props.opponentTeam) {\n      if (this.props.opponentTeam[prop]['name'] === '') {\n        userTeamFull = false;\n      }\n    }\n\n    if (userTeamFull && oppTeamFull) {\n      dispatch({\n        type: setTeamsFull\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-list\",\n      children: props.players.map((player, ind) => /*#__PURE__*/_jsxDEV(Card, {\n        player: player.name,\n        position: player.position,\n        team: player.team,\n        counter: ind\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 37\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  userTeam: state.lineup.userTeam,\n  opponentTeam: state.lineup.opponentTeam\n});\n\nexport default connect(mapStateToProps)(CardList);","map":{"version":3,"sources":["/Users/nickciambrone/Desktop/fantasy-action/fantasy-action/src/components/card-list/card-list.component.jsx"],"names":["React","Card","connect","CardList","Component","componentDidUpdate","prevProps","prevState","snapshot","userTeamFull","prop","props","userTeam","console","log","oppTeamFull","opponentTeam","dispatch","type","setTeamsFull","render","players","map","player","ind","name","position","team","mapStateToProps","state","lineup"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,wBAAP;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;;AAEC,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAsC;AACrCC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAgC;AAChD,QAAIC,YAAY,GAAC,IAAjB;;AACA,SAAK,MAAMC,IAAX,IAAmB,KAAKC,KAAL,CAAWC,QAA9B,EAAuC;AACnC,UAAI,KAAKD,KAAL,CAAWC,QAAX,CAAoBF,IAApB,EAA0B,MAA1B,MAAoC,EAAxC,EAA2C;AACzCD,QAAAA,YAAY,GAAC,KAAb;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD;AACJ;;AAED,QAAIC,WAAW,GAAC,IAAhB;;AACA,SAAK,MAAML,IAAX,IAAmB,KAAKC,KAAL,CAAWK,YAA9B,EAA2C;AACvC,UAAI,KAAKL,KAAL,CAAWK,YAAX,CAAwBN,IAAxB,EAA8B,MAA9B,MAAwC,EAA5C,EAA+C;AAC7CD,QAAAA,YAAY,GAAC,KAAb;AACD;AACJ;;AACD,QAAIA,YAAY,IAAIM,WAApB,EAAgC;AAC5BE,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAACC;AAAN,OAAD,CAAR;AACH;AAEF;;AACDC,EAAAA,MAAM,GAAE;AACN,wBACD;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBAEAT,KAAK,CAACU,OAAN,CAAcC,GAAd,CAAkB,CAACC,MAAD,EAASC,GAAT,kBAAe,QAAC,IAAD;AAAM,QAAA,MAAM,EAAED,MAAM,CAACE,IAArB;AAA2B,QAAA,QAAQ,EAAEF,MAAM,CAACG,QAA5C;AAAsD,QAAA,IAAI,EAAIH,MAAM,CAACI,IAArE;AAA2E,QAAA,OAAO,EAAEH;AAApF;AAAA;AAAA;AAAA;AAAA,cAAjC;AAFA;AAAA;AAAA;AAAA;AAAA,YADC;AAKD;;AA3BoC;;AA6BvC,MAAMI,eAAe,GAAGC,KAAK,KAAI;AAC/BjB,EAAAA,QAAQ,EAAEiB,KAAK,CAACC,MAAN,CAAalB,QADQ;AAE/BI,EAAAA,YAAY,EAAEa,KAAK,CAACC,MAAN,CAAad;AAFI,CAAJ,CAA7B;;AAKA,eAAed,OAAO,CAAC0B,eAAD,CAAP,CAAyBzB,QAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport \"./card-list.style.scss\";\nimport Card from '../card/card.component'\nimport {connect} from 'react-redux'\n\n class CardList extends React.Component{ \n  componentDidUpdate(prevProps, prevState, snapshot){\n    let userTeamFull=true\n    for (const prop in this.props.userTeam){\n        if (this.props.userTeam[prop]['name']===''){\n          userTeamFull=false\n          console.log('test')\n        }\n    }\n    \n    let oppTeamFull=true\n    for (const prop in this.props.opponentTeam){\n        if (this.props.opponentTeam[prop]['name']===''){\n          userTeamFull=false\n        }\n    }\n    if (userTeamFull && oppTeamFull){\n        dispatch({type:setTeamsFull})\n    }\n\n  }\n  render(){\n    return (\n   <div className='card-list'>\n   \n  {props.players.map((player, ind)=><Card player={player.name} position={player.position} team = {player.team} counter={ind} />)}\n  </div>)\n  }\n}\nconst mapStateToProps = state =>({\n  userTeam: state.lineup.userTeam,\n  opponentTeam: state.lineup.opponentTeam\n\n})\nexport default connect(mapStateToProps)(CardList)\n"]},"metadata":{},"sourceType":"module"}