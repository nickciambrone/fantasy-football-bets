{"ast":null,"code":"var _jsxFileName = \"/Users/nickciambrone/Desktop/fantasy-action/fantasy-action/src/components/rosters/rosters.component.jsx\";\nimport React from 'react';\nimport './rosters.styles.scss';\nimport { connect } from 'react-redux';\nimport { dropPlayer } from '../../redux/lineup/lineup.actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Rosters = ({\n  team,\n  userTeam,\n  opponentTeam,\n  dropPlayer\n}) => {\n  // console.log(userTeam['QB']['name'])\n  console.log(userTeam[ele]['position']);\n  return (\n    /*#__PURE__*/\n    // <div className='rosters'>\n    // <table id='roster'>\n    // <tr>\n    // <th>Position</th><th>Player</th></tr>\n    //     {team==='user' ? \n    //     Object.keys(userTeam).map(ele=><tr><td>{ele}</td><td><div className='player-slot'>{userTeam[ele]['name']} {userTeam[ele]['name']=='' ? '-' :  <span onClick={()=>dropPlayer(userTeam[ele]['name'],userTeam[ele]['name'])} className='drop-player'>&#10006;</span>}</div></td></tr>) : \n    //     Object.keys(opponentTeam).map(ele=><tr><td>{ele}</td><td>{opponentTeam[ele]['name']} {opponentTeam[ele]['name']=='' ? '-' :  \n    //    }</td></tr>)}\n    // </table>\n    // </div>\n    _jsxDEV(\"div\", {\n      className: \"rosters\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"roster\",\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Position\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Player\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, this), team === 'user' ? Object.keys(userTeam).map(ele => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: ele\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 48\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-slot\",\n              children: [userTeam[ele]['name'], \" \", userTeam[ele]['name'] == '' ? '-' : /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => dropPlayer(userTeam[ele]['name'], userTeam[ele]['position']),\n                className: \"drop-player\",\n                children: \"\\u2716\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 155\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 66\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 62\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 44\n        }, this)) : Object.keys(opponentTeam).map(ele => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: ele\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 52\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [opponentTeam[ele]['name'], \" \", opponentTeam[ele]['name'] == '' ? '-' : /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => dropPlayer(opponentTeam[ele]['name'], opponentTeam[ele]['position']),\n              className: \"drop-player\",\n              children: \"\\u2716\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 139\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 66\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 48\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_c = Rosters;\n\nconst mapDispatchToProps = dispatch => ({\n  dropPlayer: (player, position) => dispatch(dropPlayer({\n    player,\n    position\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(Rosters);\n\nvar _c;\n\n$RefreshReg$(_c, \"Rosters\");","map":{"version":3,"sources":["/Users/nickciambrone/Desktop/fantasy-action/fantasy-action/src/components/rosters/rosters.component.jsx"],"names":["React","connect","dropPlayer","Rosters","team","userTeam","opponentTeam","console","log","ele","Object","keys","map","mapDispatchToProps","dispatch","player","position"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,uBAAP;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,mCAAzB;;;AAEC,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,QAAP;AAAiBC,EAAAA,YAAjB;AAA+BJ,EAAAA;AAA/B,CAAD,KAA+C;AAC5D;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,GAAD,CAAR,CAAc,UAAd,CAAZ;AACA;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AACI;AACA;AACA;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACA;AAAO,QAAA,EAAE,EAAC,QAAV;AAAA,gCACA;AAAA,kCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eACiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADjB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAGKL,IAAI,KAAG,MAAP,GACDM,MAAM,CAACC,IAAP,CAAYN,QAAZ,EAAsBO,GAAtB,CAA0BH,GAAG,iBAAE;AAAA,kCAAI;AAAA,sBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,kBAAJ,eAAkB;AAAA,mCAAI;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,yBAA8BJ,QAAQ,CAACI,GAAD,CAAR,CAAc,MAAd,CAA9B,OAAsDJ,QAAQ,CAACI,GAAD,CAAR,CAAc,MAAd,KAAuB,EAAvB,GAA4B,GAA5B,gBAAmC;AAAM,gBAAA,OAAO,EAAE,MAAIP,UAAU,CAACG,QAAQ,CAACI,GAAD,CAAR,CAAc,MAAd,CAAD,EAAwBJ,QAAQ,CAACI,GAAD,CAAR,CAAc,UAAd,CAAxB,CAA7B;AAAiF,gBAAA,SAAS,EAAC,aAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,kBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA/B,CADC,GAEDC,MAAM,CAACC,IAAP,CAAYL,YAAZ,EAA0BM,GAA1B,CAA8BH,GAAG,iBAAE;AAAA,kCAAI;AAAA,sBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,kBAAJ,eAAkB;AAAA,uBAAKH,YAAY,CAACG,GAAD,CAAZ,CAAkB,MAAlB,CAAL,OAAiCH,YAAY,CAACG,GAAD,CAAZ,CAAkB,MAAlB,KAA2B,EAA3B,GAAgC,GAAhC,gBAAwC;AAAM,cAAA,OAAO,EAAE,MAAIP,UAAU,CAACI,YAAY,CAACG,GAAD,CAAZ,CAAkB,MAAlB,CAAD,EAA4BH,YAAY,CAACG,GAAD,CAAZ,CAAkB,UAAlB,CAA5B,CAA7B;AAAyF,cAAA,SAAS,EAAC,aAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAzE;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAnC,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAXJ;AAqBH,CAxBA;;KAAMN,O;;AA0BP,MAAMU,kBAAkB,GAAGC,QAAQ,KAAI;AACnCZ,EAAAA,UAAU,EAAE,CAACa,MAAD,EAAQC,QAAR,KAAmBF,QAAQ,CAACZ,UAAU,CAAC;AAACa,IAAAA,MAAD;AAAQC,IAAAA;AAAR,GAAD,CAAX;AADJ,CAAJ,CAAnC;;AAKA,eAAef,OAAO,CAAC,IAAD,EAAMY,kBAAN,CAAP,CAAiCV,OAAjC,CAAf","sourcesContent":["import React from 'react';\nimport './rosters.styles.scss';\nimport {connect} from 'react-redux'\nimport {dropPlayer} from '../../redux/lineup/lineup.actions'\n\n const Rosters = ({team, userTeam, opponentTeam, dropPlayer}) =>{\n    // console.log(userTeam['QB']['name'])\n    console.log(userTeam[ele]['position'])\n    return (\n        // <div className='rosters'>\n        // <table id='roster'>\n        // <tr>\n        // <th>Position</th><th>Player</th></tr>\n        //     {team==='user' ? \n        //     Object.keys(userTeam).map(ele=><tr><td>{ele}</td><td><div className='player-slot'>{userTeam[ele]['name']} {userTeam[ele]['name']=='' ? '-' :  <span onClick={()=>dropPlayer(userTeam[ele]['name'],userTeam[ele]['name'])} className='drop-player'>&#10006;</span>}</div></td></tr>) : \n        //     Object.keys(opponentTeam).map(ele=><tr><td>{ele}</td><td>{opponentTeam[ele]['name']} {opponentTeam[ele]['name']=='' ? '-' :  \n    //    }</td></tr>)}\n        // </table>\n        // </div>\n        <div className='rosters'>\n        <table id='roster'>\n        <tr>\n        <th>Position</th><th>Player</th></tr>\n            {team==='user' ? \n            Object.keys(userTeam).map(ele=><tr><td>{ele}</td><td><div className='player-slot'>{userTeam[ele]['name']} {userTeam[ele]['name']=='' ? '-' :  <span onClick={()=>dropPlayer(userTeam[ele]['name'], userTeam[ele]['position'])} className='drop-player'>&#10006;</span>}</div></td></tr>) : \n            Object.keys(opponentTeam).map(ele=><tr><td>{ele}</td><td>{opponentTeam[ele]['name']} {opponentTeam[ele]['name']=='' ? '-' :   <span onClick={()=>dropPlayer(opponentTeam[ele]['name'], opponentTeam[ele]['position'])} className='drop-player'>&#10006;</span>}</td></tr>)}\n        </table>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = dispatch =>({\n    dropPlayer: (player,position)=>dispatch(dropPlayer({player,position}))\n\n\n})\nexport default connect(null,mapDispatchToProps)(Rosters);"]},"metadata":{},"sourceType":"module"}