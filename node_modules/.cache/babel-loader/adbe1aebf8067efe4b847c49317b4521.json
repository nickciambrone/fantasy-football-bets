{"ast":null,"code":"var _jsxFileName = \"/Users/nickciambrone/Desktop/fantasy-action/fantasy-action/src/pages/view-lines/view-lines.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './view-lines.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ViewLines = ({\n  userTeam,\n  opponentTeam\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"view-lines\",\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"view-lines-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"View Lines\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lineups\",\n      style: {\n        display: 'flex',\n        width: '50%',\n        marginLeft: '25%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-lines-user-team\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"team\",\n          children: Object.keys(userTeam).map((position, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: (i + 1) % 2 === 0 ? 'dark' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [userTeam[position].name, \" \\xA0  \", userTeam[position].position, \" \\xA0 \", userTeam[position].team]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 12,\n              columnNumber: 96\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Math.round(100 * userTeam[position].projectedPoints) / 100\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 12,\n              columnNumber: 201\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 52\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"positions-for-teams\",\n        children: Object.keys(userTeam).map((position, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"position-view-lines\",\n            children: position\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 52\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-lines-opponent-team\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"team\",\n          children: Object.keys(opponentTeam).map((position, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: (i + 1) % 2 === 0 ? 'dark' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [opponentTeam[position].name, \" \\xA0\", opponentTeam[position].position, \"\\xA0 \", opponentTeam[position].team]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 100\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Math.round(100 * opponentTeam[position].projectedPoints) / 100\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 214\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 56\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 5\n}, this);\n\n_c = ViewLines;\n\nconst mapStateToProps = state => ({\n  userTeam: state.lineup.userTeam,\n  opponentTeam: state.lineup.opponentTeam\n});\n\nexport default connect(mapStateToProps, null)(ViewLines);\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewLines\");","map":{"version":3,"sources":["/Users/nickciambrone/Desktop/fantasy-action/fantasy-action/src/pages/view-lines/view-lines.component.jsx"],"names":["React","connect","ViewLines","userTeam","opponentTeam","display","width","marginLeft","Object","keys","map","position","i","name","team","Math","round","projectedPoints","mapStateToProps","state","lineup"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux'\nimport './view-lines.styles.scss'\n\nconst ViewLines = ({userTeam, opponentTeam}) => (\n    <div className = 'view-lines'>\n    <div className = 'view-lines-content'>\n      <h1>View Lines</h1>  \n      <div className = 'lineups' style={{display:'flex', width:'50%', marginLeft:'25%'}}>\n      <div className = 'view-lines-user-team'>\n      <table className = 'team'>\n      {Object.keys(userTeam).map((position, i) => (<tr className = {(i+1)%2===0 ? 'dark' : ''}><td>{userTeam[position].name} &nbsp;  {userTeam[position].position} &nbsp; {userTeam[position].team}</td><td>{Math.round(100*userTeam[position].projectedPoints)/100}</td></tr>))}\n      </table>\n      </div>\n      <table className = 'positions-for-teams'>\n      {Object.keys(userTeam).map((position, i) => (<tr><td className='position-view-lines'>{position}</td></tr>))}\n      </table>\n      <div className = 'view-lines-opponent-team'>\n\n      <table className = 'team'>\n      {Object.keys(opponentTeam).map((position, i) => (<tr className = {(i+1)%2===0 ? 'dark' : ''}><td>{opponentTeam[position].name} &nbsp;{opponentTeam[position].position}&nbsp; {opponentTeam[position].team}</td><td>{Math.round(100*opponentTeam[position].projectedPoints)/100}</td></tr>))}\n      </table>\n      </div>\n      </div>\n      </div>\n    </div>\n)\n\nconst mapStateToProps = state => ({\n  userTeam: state.lineup.userTeam,\n  opponentTeam: state.lineup.opponentTeam\n})\nexport default connect(mapStateToProps,null)(ViewLines)"]},"metadata":{},"sourceType":"module"}