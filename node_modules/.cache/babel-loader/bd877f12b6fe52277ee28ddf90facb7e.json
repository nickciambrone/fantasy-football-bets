{"ast":null,"code":"var _jsxFileName = \"/Users/nickciambrone/Desktop/fantasy-action/fantasy-action/src/components/card/card.component.jsx\";\nimport { render } from '@testing-library/react';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { addPlayer } from '../../redux/lineup/lineup.actions';\nimport { selectOpponentPlayers, selectUserPlayers, selectUserTeam } from '../../redux/lineup/lineup.selectors';\nimport './card.style.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Card = ({\n  player,\n  position,\n  team,\n  counter,\n  addPlayer,\n  points,\n  userPlayers,\n  opponentPlayers,\n  activeTeam\n}) => {\n  let projectedPoints = points / 16;\n  let disabled = false;\n\n  if (team === 'user') {\n    opponentPlayers.forEach((ele, ind) => {\n      console.log(ele);\n      console.log(player);\n\n      if (ele === player) {\n        console.log(ele);\n        console.log(player);\n        disabled = true;\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'card-container',\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"player\",\n      src: `https://robohash.org/${counter}?set=set2&size=180x180`,\n      height: \"40px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-name\",\n      children: player\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"position-and-team\",\n      children: [position, \" - \\xA0\", team]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"#\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"glyphicon glyphicon-plus\",\n        onClick: () => addPlayer({\n          player,\n          position,\n          team,\n          projectedPoints\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 12\n  }, this);\n};\n\n_c = Card;\n\nconst mapStateToProps = state => ({\n  userTeam: state.lineup.userTeam,\n  opponentTeam: state.lineup.opponentTeam,\n  userPlayers: selectUserPlayers(state),\n  opponentPlayers: selectOpponentPlayers(state),\n  activeTeam: state.lineup.team\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addPlayer: playerInfo => dispatch(addPlayer(playerInfo))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/nickciambrone/Desktop/fantasy-action/fantasy-action/src/components/card/card.component.jsx"],"names":["render","React","connect","addPlayer","selectOpponentPlayers","selectUserPlayers","selectUserTeam","Card","player","position","team","counter","points","userPlayers","opponentPlayers","activeTeam","projectedPoints","disabled","forEach","ele","ind","console","log","mapStateToProps","state","userTeam","lineup","opponentTeam","mapDispatchToProps","dispatch","playerInfo"],"mappings":";AAAA,SAASA,MAAT,QAAuB,wBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,QAAwB,mCAAxB;AACA,SAAQC,qBAAR,EAA+BC,iBAA/B,EAAkDC,cAAlD,QAAuE,qCAAvE;AACA,OAAO,mBAAP;;;AACA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,IAAnB;AAAyBC,EAAAA,OAAzB;AAAkCR,EAAAA,SAAlC;AAA6CS,EAAAA,MAA7C;AAAqDC,EAAAA,WAArD;AAAkEC,EAAAA,eAAlE;AAAmFC,EAAAA;AAAnF,CAAD,KACb;AACE,MAAIC,eAAe,GAAGJ,MAAM,GAAG,EAA/B;AACA,MAAIK,QAAQ,GAAG,KAAf;;AACA,MAAIP,IAAI,KAAG,MAAX,EAAkB;AAChBI,IAAAA,eAAe,CAACI,OAAhB,CAAwB,CAACC,GAAD,EAAMC,GAAN,KAAY;AAClCC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYd,MAAZ;;AACA,UAAIW,GAAG,KAAGX,MAAV,EAAiB;AACfa,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYd,MAAZ;AACAS,QAAAA,QAAQ,GAAC,IAAT;AACD;AACF,KARD;AASD;;AAKD,sBAAS;AAAK,IAAA,SAAS,EAAE,gBAAhB;AAAA,4BACH;AAAK,MAAA,GAAG,EAAC,QAAT;AAAkB,MAAA,GAAG,EAAK,wBAAuBN,OAAQ,wBAAzD;AAAkF,MAAA,MAAM,EAAC;AAAzF;AAAA;AAAA;AAAA;AAAA,YADG,eAEJ;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBAA8BH;AAA9B;AAAA;AAAA;AAAA;AAAA,YAFI,eAGJ;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,iBAAoCC,QAApC,aACCC,IADD;AAAA;AAAA;AAAA;AAAA;AAAA,YAHI,eAKJ;AAAG,MAAA,IAAI,EAAC,GAAR;AAAA,6BACG;AAAM,QAAA,KAAK,EAAC,0BAAZ;AAAuC,QAAA,OAAO,EAAE,MAAMP,SAAS,CAAC;AAACK,UAAAA,MAAD;AAAQC,UAAAA,QAAR;AAAiBC,UAAAA,IAAjB;AAAuBM,UAAAA;AAAvB,SAAD;AAA/D;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YALI;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AASD,CA5BD;;KAAMT,I;;AA8BN,MAAMgB,eAAe,GAAGC,KAAK,KAAI;AAC/BC,EAAAA,QAAQ,EAAED,KAAK,CAACE,MAAN,CAAaD,QADQ;AAE/BE,EAAAA,YAAY,EAAEH,KAAK,CAACE,MAAN,CAAaC,YAFI;AAG/Bd,EAAAA,WAAW,EAAER,iBAAiB,CAACmB,KAAD,CAHC;AAI/BV,EAAAA,eAAe,EAAEV,qBAAqB,CAACoB,KAAD,CAJP;AAK/BT,EAAAA,UAAU,EAACS,KAAK,CAACE,MAAN,CAAahB;AALO,CAAJ,CAA7B;;AAQA,MAAMkB,kBAAkB,GAAGC,QAAQ,KAAI;AACrC1B,EAAAA,SAAS,EAAG2B,UAAD,IAAgBD,QAAQ,CAAC1B,SAAS,CAAC2B,UAAD,CAAV;AADE,CAAJ,CAAnC;;AAKA,eAAe5B,OAAO,CAACqB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CrB,IAA7C,CAAf","sourcesContent":["import { render } from '@testing-library/react';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {addPlayer} from '../../redux/lineup/lineup.actions'\nimport {selectOpponentPlayers, selectUserPlayers, selectUserTeam} from '../../redux/lineup/lineup.selectors'\nimport './card.style.scss'\nconst Card = ({player, position, team, counter, addPlayer, points, userPlayers, opponentPlayers, activeTeam}) => \n{\n  let projectedPoints = points / 16\n  let disabled = false;\n  if (team==='user'){\n    opponentPlayers.forEach((ele, ind)=>{\n      console.log(ele)\n      console.log(player)\n      if (ele===player){\n        console.log(ele)\n        console.log(player)\n        disabled=true;\n      }\n    })\n  }\n\n\n\n\n  return ( <div className={'card-container'}>\n        <img alt='player' src = {`https://robohash.org/${counter}?set=set2&size=180x180`} height='40px'></img>\n       <div className='player-name'>{player}</div> \n       <div className='position-and-team'>{position} - &nbsp;\n       {team}</div>\n       <a href=\"#\">\n          <span class=\"glyphicon glyphicon-plus\" onClick={() => addPlayer({player,position,team, projectedPoints})}></span>\n        </a>      \n           </div>)\n}\n\nconst mapStateToProps = state =>({\n  userTeam: state.lineup.userTeam,\n  opponentTeam: state.lineup.opponentTeam,\n  userPlayers: selectUserPlayers(state),\n  opponentPlayers: selectOpponentPlayers(state),\n  activeTeam:state.lineup.team\n\n})\nconst mapDispatchToProps = dispatch =>({\n  addPlayer: (playerInfo) => dispatch(addPlayer(playerInfo)),\n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);"]},"metadata":{},"sourceType":"module"}