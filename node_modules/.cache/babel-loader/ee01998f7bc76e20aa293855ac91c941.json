{"ast":null,"code":"var _jsxFileName = \"/Users/nickciambrone/Desktop/fantasy-action/fantasy-action/src/components/rosters/rosters.component.jsx\";\nimport React from 'react';\nimport './rosters.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Rosters = ({\n  team,\n  userTeam,\n  opponentTeam,\n  dropPlayer\n}) => {\n  console.log(userTeam['QB']['name']);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rosters\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      id: \"roster\",\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Position\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), team === 'user' ? Object.keys(userTeam).map(ele => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: ele\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 48\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-slot\",\n            children: [userTeam[ele]['name'], \" \", userTeam[ele]['name'] == '' ? '-' : /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => dropPlayer(userTeam[ele]['name'], userTeam[ele]['name']),\n              className: \"drop-player\",\n              children: \"\\u2716\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 155\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 66\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 62\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 44\n      }, this)) : Object.keys(opponentTeam).map(ele => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: ele\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 52\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [opponentTeam[ele]['name'], \" \", opponentTeam[ele]['name'] == '' ? '-' : /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => dropPlayer(opponentTeam[ele]['name'], opponentTeam[ele]['position']),\n            className: \"drop-player\",\n            children: \"\\u2716\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 138\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 66\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 48\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_c = Rosters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rosters\");","map":{"version":3,"sources":["/Users/nickciambrone/Desktop/fantasy-action/fantasy-action/src/components/rosters/rosters.component.jsx"],"names":["React","Rosters","team","userTeam","opponentTeam","dropPlayer","console","log","Object","keys","map","ele"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,uBAAP;;AAEA,OAAO,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,QAAP;AAAiBC,EAAAA,YAAjB;AAA+BC,EAAAA;AAA/B,CAAD,KAA+C;AAClEC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAAC,IAAD,CAAR,CAAe,MAAf,CAAZ;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACA;AAAO,MAAA,EAAE,EAAC,QAAV;AAAA,8BACA;AAAA,gCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eACiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADjB;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAGKD,IAAI,KAAG,MAAP,GACDM,MAAM,CAACC,IAAP,CAAYN,QAAZ,EAAsBO,GAAtB,CAA0BC,GAAG,iBAAE;AAAA,gCAAI;AAAA,oBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,gBAAJ,eAAkB;AAAA,iCAAI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,uBAA8BR,QAAQ,CAACQ,GAAD,CAAR,CAAc,MAAd,CAA9B,OAAsDR,QAAQ,CAACQ,GAAD,CAAR,CAAc,MAAd,KAAuB,EAAvB,GAA4B,GAA5B,gBAAmC;AAAM,cAAA,OAAO,EAAE,MAAIN,UAAU,CAACF,QAAQ,CAACQ,GAAD,CAAR,CAAc,MAAd,CAAD,EAAuBR,QAAQ,CAACQ,GAAD,CAAR,CAAc,MAAd,CAAvB,CAA7B;AAA4E,cAAA,SAAS,EAAC,aAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAA/B,CADC,GAEDH,MAAM,CAACC,IAAP,CAAYL,YAAZ,EAA0BM,GAA1B,CAA8BC,GAAG,iBAAE;AAAA,gCAAI;AAAA,oBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,gBAAJ,eAAkB;AAAA,qBAAKP,YAAY,CAACO,GAAD,CAAZ,CAAkB,MAAlB,CAAL,OAAiCP,YAAY,CAACO,GAAD,CAAZ,CAAkB,MAAlB,KAA2B,EAA3B,GAAgC,GAAhC,gBAAuC;AAAM,YAAA,OAAO,EAAE,MAAIN,UAAU,CAACD,YAAY,CAACO,GAAD,CAAZ,CAAkB,MAAlB,CAAD,EAA4BP,YAAY,CAACO,GAAD,CAAZ,CAAkB,UAAlB,CAA5B,CAA7B;AAAyF,YAAA,SAAS,EAAC,aAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAxE;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAnC,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAbM;KAAMV,O","sourcesContent":["import React from 'react';\n\nimport './rosters.styles.scss';\n\nexport const Rosters = ({team, userTeam, opponentTeam, dropPlayer}) =>{\n    console.log(userTeam['QB']['name'])\n    return (\n        <div className='rosters'>\n        <table id='roster'>\n        <tr>\n        <th>Position</th><th>Player</th></tr>\n            {team==='user' ? \n            Object.keys(userTeam).map(ele=><tr><td>{ele}</td><td><div className='player-slot'>{userTeam[ele]['name']} {userTeam[ele]['name']=='' ? '-' :  <span onClick={()=>dropPlayer(userTeam[ele]['name'],userTeam[ele]['name'])} className='drop-player'>&#10006;</span>}</div></td></tr>) : \n            Object.keys(opponentTeam).map(ele=><tr><td>{ele}</td><td>{opponentTeam[ele]['name']} {opponentTeam[ele]['name']=='' ? '-' :  <span onClick={()=>dropPlayer(opponentTeam[ele]['name'], opponentTeam[ele]['position'])} className='drop-player'>&#10006;</span>}</td></tr>)}\n        </table>\n        </div>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}